vim.cmd('hi clear')

vim.o.background = 'dark'
if vim.fn.exists('syntax_on') then
  vim.cmd('syntax reset')
end

vim.o.termguicolors = true
vim.g.colors_name = 'carbonfox'

local c = {
  base00 = "#161616",
  base01 = "#282828",
  base02 = "#2a2a2a",
  base03 = "#3b3b3b",
  base04 = "#525253",
  base05 = "#f2f4f8",
  base06 = "#e0e0e0",
  base07 = "#ffffff",
  base08 = "#78a9ff",
  base09 = "#08bdba",
  base0A = "#3ddbd9",
  base0B = "#25be6a",
  base0C = "#33b1ff",
  base0D = "#ff7eb6",
  base0E = "#be95ff",
  base0F = "#78a9ff",
  bg0 = "#161616",
  bg1 = "#0e0e0e",
  bg2 = "#1d1d1d",
  bg3 = "#242424",
  bg4 = "#2b2b2b",
  bg5 = "#323232",
  blue = "#78a9ff",
  blue2 = "#78a9ff",
  cyan = "#3ddbd9",
  fg = "#dfdfe0",
  gray1 = "#404040",
  gray2 = "#4e4e4e",
  gray3 = "#5c5c5c",
  gray4 = "#636363",
  green = "#25be6a",
  green2 = "#42be65",
  orange = "#ffa332",
  pink = "#ff7eb6",
  pink2 = "#ff7eb6",
  purple = "#be95ff",
  purple2 = "#9b69d9",
  red = "#ee5396",
  teal = "#33b1ff",
  ui_folder_icon = "#78a9ff",
  ui_light_bg = "#2b2b2b",
  ui_pmenu_bg = "#08bdba",
  ui_statusline_bg = "#1d1d1d",
  ui_visual_line = "#2a2a2a",
  yellow = "#ffe731",
  yellow2 = "#ffe731",
}

local hl = vim.api.nvim_set_hl

-- Base16
hl(0, "ThemeBase00", { fg = c.base00, bg = 'NONE', })
hl(0, "ThemeBase01", { fg = c.base01, bg = 'NONE', })
hl(0, "ThemeBase02", { fg = c.base02, bg = 'NONE', })
hl(0, "ThemeBase03", { fg = c.base03, bg = 'NONE', })
hl(0, "ThemeBase04", { fg = c.base04, bg = 'NONE', })
hl(0, "ThemeBase05", { fg = c.base05, bg = 'NONE', })
hl(0, "ThemeBase06", { fg = c.base06, bg = 'NONE', })
hl(0, "ThemeBase07", { fg = c.base07, bg = 'NONE', })
hl(0, "ThemeBase08", { fg = c.base08, bg = 'NONE', })
hl(0, "ThemeBase09", { fg = c.base09, bg = 'NONE', })
hl(0, "ThemeBase10", { fg = c.base0A, bg = 'NONE', })
hl(0, "ThemeBase11", { fg = c.base0B, bg = 'NONE', })
hl(0, "ThemeBase12", { fg = c.base0C, bg = 'NONE', })
hl(0, "ThemeBase13", { fg = c.base0D, bg = 'NONE', })
hl(0, "ThemeBase14", { fg = c.base0E, bg = 'NONE', })
hl(0, "ThemeBase15", { fg = c.base0F, bg = 'NONE', })

-- Greys
hl(0, "ThemeGreys01", { fg = c.bg1, bg = 'NONE', })
hl(0, "ThemeGreys02", { fg = c.bg0, bg = 'NONE', })
hl(0, "ThemeGreys03", { fg = c.ui_statusline_bg, bg = 'NONE', })
hl(0, "ThemeGreys04", { fg = c.bg2, bg = 'NONE', })
hl(0, "ThemeGreys05", { fg = c.bg3, bg = 'NONE', })
hl(0, "ThemeGreys06", { fg = c.bg4, bg = 'NONE', })
hl(0, "ThemeGreys07", { fg = c.bg5, bg = 'NONE', })
hl(0, "ThemeGreys08", { fg = c.gray1, bg = 'NONE', })
hl(0, "ThemeGreys09", { fg = c.gray2, bg = 'NONE', })
hl(0, "ThemeGreys10", { fg = c.gray3, bg = 'NONE', })
hl(0, "ThemeGreys11", { fg = c.gray4, bg = 'NONE', })
hl(0, "ThemeGreys12", { fg = c.fg, bg = 'NONE', })

-- highlights
hl(0, "Normal", { fg = c.base05, bg = c.base00, })
hl(0, "NormalNC", { fg = c.base05, bg = c.base00, })
hl(0, "NormalSB", { fg = c.base05, bg = c.bg1, })
hl(0, "Cursor", { fg = c.base00, bg = c.base05, })
hl(0, "lCursor", { fg = c.base00, bg = c.base05, })
hl(0, "CursorIM", { fg = c.base00, bg = c.base05, })
hl(0, "CursorLine", { fg = 'NONE', bg = c.base02, })
hl(0, "CursorColumn", { fg = 'NONE', bg = c.base02, })
hl(0, "TermCursor", { fg = c.base00, bg = c.base05, })
hl(0, "TermCursorNC", { fg = c.base00, bg = c.base05, })
hl(0, "LineNr", { fg = c.base03, bg = 'NONE', })
hl(0, "CursorLineNr", { fg = c.base05, bg = 'NONE', })
hl(0, "DiffAdd", { fg = 'NONE', bg = c.green2, })
hl(0, "DiffChange", { fg = 'NONE', bg = c.blue2, })
hl(0, "DiffDelete", { fg = 'NONE', bg = c.red, })
hl(0, "Pmenu", { fg = 'NONE', bg = c.bg3, })
hl(0, "PmenuSel", { fg = c.bg0, bg = c.ui_pmenu_bg, })
hl(0, "PmenuSbar", { fg = 'NONE', bg = c.base02, })
hl(0, "PmenuThumb", { fg = 'NONE', bg = c.gray1, })
hl(0, "WildMenu", { fg = c.base0B, bg = c.base03, bold=true, })
hl(0, "MsgArea", { fg = c.base05, bg = 'NONE', })
hl(0, "ModeMsg", { fg = c.base05, bg = 'NONE', bold=true, })
hl(0, "MsgSeparator", { fg = c.base05, bg = c.base00, })
hl(0, "MoreMsg", { fg = c.blue, bg = 'NONE', })
hl(0, "WarningMsg", { fg = c.yellow, bg = 'NONE', })
hl(0, "ErrorMsg", { fg = c.base0F, bg = c.base00, bold=true, })
hl(0, "MatchParen", { fg = c.base0E, bg = 'NONE', blend = 25, })
hl(0, "TabLine", { fg = c.base04, bg = c.base02, })
hl(0, "TabLineSel", { fg = c.bg0, bg = c.blue, })
hl(0, "TabLineFill", { fg = 'NONE', bg = c.bg0, })
hl(0, "Search", { fg = c.base01, bg = c.base0A, })
hl(0, "IncSearch", { fg = c.base01, bg = c.base09, })
hl(0, "CurSearch", { link = 'IncSearch' })
hl(0, "Visual", { fg = 'NONE', bg = c.base04, })
hl(0, "VisualNOS", { fg = c.base08, bg = 'NONE', })
hl(0, "Folded", { fg = c.base03, bg = c.base01, })
hl(0, "FoldColumn", { fg = c.base0C, bg = c.base01, })
hl(0, "ColorColumn", { fg = 'NONE', bg = c.bg0, })
hl(0, "SignColumn", { fg = c.base05, bg = 'NONE', })
hl(0, "VertSplit", { fg = c.base03, bg = 'NONE', })
hl(0, "WinSeparator", { fg = c.base03, bg = 'NONE', bold=true, })
hl(0, "NormalFloat", { fg = c.base05, bg = c.bg1, })
hl(0, "FloatBorder", { fg = c.blue, bg = c.bg1, })
hl(0, "SpellBad", { fg = 'NONE', bg = 'NONE', sp = c.base08, undercurl=true, })
hl(0, "SpellCap", { fg = 'NONE', bg = 'NONE', sp = c.base0D, undercurl=true, })
hl(0, "SpellLocal", { fg = 'NONE', bg = 'NONE', sp = c.base0C, undercurl=true, })
hl(0, "SpellRare", { fg = 'NONE', bg = 'NONE', sp = c.base0E, undercurl=true, })
hl(0, "QuickFixLine", { fg = 'NONE', bg = c.base01, sp = c.b, })
hl(0, "Directory", { fg = c.base0D, bg = 'NONE', })
hl(0, "Question", { fg = c.blue, bg = 'NONE', })
hl(0, "Conceal", { fg = c.base04, bg = 'NONE', })
hl(0, "SpecialKey", { fg = c.base0c, bg = 'NONE', bold=true, })
hl(0, "Substitute", { fg = c.bg0, bg = c.red, })
hl(0, "EndOfBuffer", { fg = c.base00, bg = 'NONE', })
hl(0, "NonText", { fg = c.base03, bg = 'NONE', })

-- Code
hl(0, "Bold", { fg = 'NONE', bg = 'NONE', bold=true, })
hl(0, "Boolean", { fg = c.base09, bg = 'NONE', })
hl(0, "Character", { fg = c.base08, bg = 'NONE', })
hl(0, "Comment", { fg = c.base03, bg = 'NONE', italic=true, })
hl(0, "Conditional", { fg = c.base0E, bg = 'NONE', })
hl(0, "Constant", { fg = c.base08, bg = 'NONE', })
hl(0, "Debug", { fg = c.base08, bg = 'NONE', })
hl(0, "Define", { fg = c.base0E, bg = 'NONE', })
hl(0, "Delimiter", { fg = c.base05, bg = 'NONE', })
hl(0, "Error", { fg = c.base0F, bg = 'NONE', bold=true, })
hl(0, "Exception", { fg = c.base0E, bg = 'NONE', })
hl(0, "Float", { fg = c.base09, bg = 'NONE', })
hl(0, "Function", { fg = c.base0D, bg = 'NONE', })
hl(0, "Identifier", { fg = c.base08, bg = 'NONE', })
hl(0, "Include", { fg = c.base0D, bg = 'NONE', })
hl(0, "Italic", { fg = 'NONE', bg = 'NONE', italic=true, })
hl(0, "Keyword", { fg = c.base0E, bg = 'NONE', italic=true, })
hl(0, "Label", { fg = c.base0A, bg = 'NONE', })
hl(0, "Macro", { fg = c.base08, bg = 'NONE', })
hl(0, "Number", { fg = c.base09, bg = 'NONE', })
hl(0, "Operator", { fg = c.base05, bg = 'NONE', })
hl(0, "PreCondit", { fg = c.base0E, bg = 'NONE', })
hl(0, "PreProc", { fg = c.base0A, bg = 'NONE', })
hl(0, "Repeat", { fg = c.base0A, bg = 'NONE', })
hl(0, "Special", { fg = c.base0C, bg = 'NONE', })
hl(0, "SpecialChar", { fg = c.base0F, bg = 'NONE', })
hl(0, "Statement", { fg = c.base08, bg = 'NONE', })
hl(0, "StorageClass", { fg = c.base0A, bg = 'NONE', })
hl(0, "String", { fg = c.base0B, bg = 'NONE', })
hl(0, "Structure", { fg = c.base0E, bg = 'NONE', })
hl(0, "Tag", { fg = c.base0A, bg = 'NONE', })
hl(0, "Title", { fg = c.blue, bg = 'NONE', bold=true, })
hl(0, "Todo", { fg = c.base0A, bg = c.base01, bold=true, })
hl(0, "Type", { fg = c.base0A, bg = 'NONE', })
hl(0, "Typedef", { fg = c.base0A, bg = 'NONE', })
hl(0, "Underlined", { fg = 'NONE', bg = 'NONE', underline=true, })

-- Treesitter
hl(0, "@none", { fg = 'NONE', bg = 'NONE', })
hl(0, "@operator", { fg = c.base0C, bg = 'NONE', })
hl(0, "@punctuation.delimeter", { fg = c.base0C, bg = 'NONE', })
hl(0, "@punctuation.bracket", { fg = c.base05, bg = 'NONE', })
hl(0, "@string", { link = 'String' })
hl(0, "@string.documentation", { fg = c.yellow2, bg = 'NONE', })
hl(0, "@string.escape", { link = 'SpecialChar' })
hl(0, "@string.regexp", { link = 'String' })
hl(0, "@string.special.muttrc", { link = 'Identifier' })
hl(0, "@variable.builtin.muttrc", { fg = c.cyan, bg = 'NONE', })
hl(0, "@character", { link = 'Character' })
hl(0, "@character.special", { link = 'SpecialChar' })
hl(0, "@boolean", { link = 'Boolean' })
hl(0, "@number", { link = 'Number' })
hl(0, "@number.float", { link = 'Float' })
hl(0, "@constructor", { fg = c.base0C, bg = 'NONE', })
hl(0, "@variable.parameter", { fg = c.base09, bg = 'NONE', })
hl(0, "@variable.parameter.builtin", { fg = c.base09, bg = 'NONE', })
hl(0, "@keyword", { fg = c.base0E, bg = 'NONE', italic=true, })
hl(0, "@keyword.function", { link = '@keyword' })
hl(0, "@keyword.operator", { link = '@operator' })
hl(0, "@keyword.return", { link = '@keyword' })
hl(0, "@keyword.conditional", { link = 'Conditional' })
hl(0, "@keyword.coroutine", { link = '@keyword' })
hl(0, "@keyword.import", { link = 'Include' })
hl(0, "@keyword.exception", { link = 'Exception' })
hl(0, "@keyword.debug", { link = 'Debug' })
hl(0, "@keyword.directive", { link = 'PreProc' })
hl(0, "@keyword.directive.define", { link = 'Define' })
hl(0, "@keyword.repeat", { link = 'Repeat' })
hl(0, "@keyword.storage", { link = 'StorageClass' })
hl(0, "@label", { fg = c.blue, bg = 'NONE', })
hl(0, "@type", { link = 'Type' })
hl(0, "@type.builtin", { link = 'Type' })
hl(0, "@type.definition", { link = 'Typedef' })
hl(0, "@type.qualifier", { link = 'Keyword' })
hl(0, "@annotation", { link = 'PreProc' })
hl(0, "@attribute", { link = 'PreProc' })
hl(0, "@property", { fg = c.green2, bg = 'NONE', })
hl(0, "@variable", { fg = c.fg, bg = 'NONE', })
hl(0, "@variable.member", { fg = c.green2, bg = 'NONE', })
hl(0, "@variable.builtin", { fg = c.red, bg = 'NONE', })
hl(0, "@module", { link = 'Include' })
hl(0, "@module.builtin", { fg = c.red, bg = 'NONE', })
hl(0, "@comment", { link = 'Comment' })
hl(0, "@comment.error", { link = 'WarningMsg' })
hl(0, "@comment.hint", { link = 'WarningMsg' })
hl(0, "@comment.note", { link = 'SpecialComment' })
hl(0, "@comment.todo", { link = 'Todo' })
hl(0, "@comment.warning", { fg = c.yellow, bg = 'NONE', })
hl(0, "@constant", { link = 'Constant' })
hl(0, "@constant.builtin", { link = 'Special' })
hl(0, "@constant.macro", { link = 'Define' })
hl(0, "@diff.plus", { link = 'DiffAdd' })
hl(0, "@diff.minus", { link = 'DiffDelete' })
hl(0, "@diff.delta", { link = 'DiffChange' })
hl(0, "@markup", { link = '@none' })
hl(0, "@markup.strong", { link = 'Bold' })
hl(0, "@markup.strikethrough", { fg = 'NONE', bg = 'NONE', strikethrough=true, })
hl(0, "@markup.italic", { link = 'Italic' })
hl(0, "@markup.underline", { link = 'Underlined' })
hl(0, "@markup.heading", { link = 'Title' })
hl(0, "@markup.math", { link = 'Special' })
hl(0, "@markup.link", { fg = c.teal, bg = 'NONE', })
hl(0, "@markup.link.label", { link = 'SpecialChar' })
hl(0, "@markup.link.url", { link = 'Underlined' })
hl(0, "@markup.list", { fg = c.base0C, bg = 'NONE', })
hl(0, "@markup.list.unchecked", { fg = c.pink, bg = 'NONE', })
hl(0, "@markup.list.checked", { fg = c.base0B, bg = 'NONE', })
hl(0, "@markup.raw", { link = 'String' })
hl(0, "@tag", { link = 'Tag' })
hl(0, "@tag.attribute", { link = '@property' })
hl(0, "@tag.delimiter", { link = 'Delimiter' })
hl(0, "@lsp.type.boolean", { link = '@boolean' })
hl(0, "@lsp.type.builtinType", { link = '@type.builtin' })
hl(0, "@lsp.type.comment", { link = '@comment' })
hl(0, "@lsp.type.decorator", { link = '@attribute' })
hl(0, "@lsp.type.deriveHelper", { link = '@attribute' })
hl(0, "@lsp.type.enum", { link = '@type' })
hl(0, "@lsp.type.enumMember", { link = '@constant' })
hl(0, "@lsp.type.escapeSequence", { link = '@string.escape' })
hl(0, "@lsp.type.formatSpecifier", { link = '@markup.list' })
hl(0, "@lsp.type.generic", { link = '@variable' })
hl(0, "@lsp.type.function", { link = '@function' })
hl(0, "@lsp.type.interface", { fg = c.cyan, bg = 'NONE', })
hl(0, "@lsp.type.keyword", { link = '@keyword' })
hl(0, "@lsp.type.lifetime", { link = '@keyword.storage' })
hl(0, "@lsp.type.namespace", { link = '@module' })
hl(0, "@lsp.type.number", { link = '@number' })
hl(0, "@lsp.type.operator", { link = '@operator' })
hl(0, "@lsp.type.parameter", { link = '@variable.parameter' })
hl(0, "@lsp.type.property", { link = '@property' })
hl(0, "@lsp.type.selfKeyword", { link = '@variable.builtin' })
hl(0, "@lsp.type.selfTypeKeyword", { link = '@variable.builtin' })
hl(0, "@lsp.type.string", { link = '@string' })
hl(0, "@lsp.type.typeAlias", { link = '@type.definition' })
hl(0, "@lsp.type.variable", { fg = 'NONE', bg = 'NONE', })
hl(0, "@lsp.type.unresolvedReference", { fg = 'NONE', bg = 'NONE', sp = c.red, undercurl=true, })
hl(0, "@lsp.typemod.class.defaultLibrary", { link = '@type.builtin' })
hl(0, "@lsp.typemod.enum.defaultLibrary", { link = '@type.builtin' })
hl(0, "@lsp.typemod.enumMember.defaultLibrary", { link = '@constant.builtin' })
hl(0, "@lsp.typemod.function.defaultLibrary", { link = '@function.builtin' })
hl(0, "@lsp.typemod.keyword.async", { link = '@keyword.coroutine' })
hl(0, "@lsp.typemod.keyword.injected", { link = '@keyword' })
hl(0, "@lsp.typemod.macro.defaultLibrary", { link = '@function.builtin' })
hl(0, "@lsp.typemod.method.defaultLibrary", { link = '@function.builtin' })
hl(0, "@lsp.typemod.operator.injected", { link = '@operator' })
hl(0, "@lsp.typemod.string.injected", { link = '@string' })
hl(0, "@lsp.typemod.struct.defaultLibrary", { link = '@type.builtin' })
hl(0, "@lsp.typemod.type.defaultLibrary", { fg = c.cyan, bg = 'NONE', })
hl(0, "@lsp.typemod.typeAlias.defaultLibrary", { fg = c.cyan, bg = 'NONE', })
hl(0, "@lsp.typemod.variable.callable", { link = '@function' })
hl(0, "@lsp.typemod.variable.defaultLibrary", { link = '@variable.builtin' })
hl(0, "@lsp.typemod.variable.injected", { link = '@variable' })
hl(0, "@lsp.typemod.variable.static", { link = '@constant' })

-- LSP
hl(0, "DiagnosticHint", { fg = c.purple, bg = 'NONE', })
hl(0, "DiagnosticInfo", { fg = c.green, bg = 'NONE', })
hl(0, "DiagnosticWarn", { fg = c.yellow, bg = 'NONE', })
hl(0, "DiagnosticError", { fg = c.red, bg = 'NONE', })
hl(0, "DiagnosticOther", { fg = c.purple, bg = 'NONE', })
hl(0, "DiagnosticSignHint", { link = 'DiagnosticHint' })
hl(0, "DiagnosticSignInfo", { link = 'DiagnosticInfo' })
hl(0, "DiagnosticSignWarn", { link = 'DiagnosticWarn' })
hl(0, "DiagnosticSignError", { link = 'DiagnosticError' })
hl(0, "DiagnosticSignOther", { link = 'DiagnosticOther' })
hl(0, "DiagnosticSignWarning", { link = 'DiagnosticWarn' })
hl(0, "DiagnosticFloatingHint", { link = 'DiagnosticHint' })
hl(0, "DiagnosticFloatingInfo", { link = 'DiagnosticInfo' })
hl(0, "DiagnosticFloatingWarn", { link = 'DiagnosticWarn' })
hl(0, "DiagnosticFloatingError", { link = 'DiagnosticError' })
hl(0, "DiagnosticUnderlineHint", { fg = 'NONE', bg = 'NONE', sp = c.teal, undercurl=true, })
hl(0, "DiagnosticUnderlineInfo", { fg = 'NONE', bg = 'NONE', sp = c.base0A, undercurl=true, })
hl(0, "DiagnosticUnderlineWarn", { fg = 'NONE', bg = 'NONE', sp = c.yellow, undercurl=true, })
hl(0, "DiagnosticUnderlineError", { fg = 'NONE', bg = 'NONE', sp = c.base08, undercurl=true, })
hl(0, "DiagnosticSignInformation", { link = 'DiagnosticInfo' })
hl(0, "DiagnosticVirtualTextHint", { fg = c.teal, bg = 'NONE', })
hl(0, "DiagnosticVirtualTextInfo", { fg = c.yellow2, bg = 'NONE', })
hl(0, "DiagnosticVirtualTextWarn", { fg = c.base09, bg = 'NONE', })
hl(0, "DiagnosticVirtualTextError", { fg = c.base08, bg = 'NONE', })
hl(0, "LspDiagnosticsError", { link = 'DiagnosticError' })
hl(0, "LspDiagnosticsWarning", { link = 'DiagnosticWarn' })
hl(0, "LspDiagnosticsInfo", { link = 'DiagnosticInfo' })
hl(0, "LspDiagnosticsInformation", { link = 'LspDiagnosticsInfo' })
hl(0, "LspDiagnosticsHint", { link = 'DiagnosticHint' })
hl(0, "LspDiagnosticsDefaultError", { link = 'LspDiagnosticsError' })
hl(0, "LspDiagnosticsDefaultWarning", { link = 'LspDiagnosticsWarning' })
hl(0, "LspDiagnosticsDefaultInformation", { link = 'LspDiagnosticsInfo' })
hl(0, "LspDiagnosticsDefaultInfo", { link = 'LspDiagnosticsInfo' })
hl(0, "LspDiagnosticsDefaultHint", { link = 'LspDiagnosticsHint' })
hl(0, "LspDiagnosticsVirtualTextError", { link = 'DiagnosticVirtualTextError' })
hl(0, "LspDiagnosticsVirtualTextWarning", { link = 'DiagnosticVirtualTextWarn' })
hl(0, "LspDiagnosticsVirtualTextInformation", { link = 'DiagnosticVirtualTextInfo' })
hl(0, "LspDiagnosticsVirtualTextInfo", { link = 'DiagnosticVirtualTextInfo' })
hl(0, "LspDiagnosticsVirtualTextHint", { link = 'DiagnosticVirtualTextHint' })
hl(0, "LspDiagnosticsFloatingError", { link = 'LspDiagnosticsError' })
hl(0, "LspDiagnosticsFloatingWarning", { link = 'LspDiagnosticsWarning' })
hl(0, "LspDiagnosticsFloatingInformation", { link = 'LspDiagnosticsInfo' })
hl(0, "LspDiagnosticsFloatingInfo", { link = 'LspDiagnosticsInfo' })
hl(0, "LspDiagnosticsFloatingHint", { link = 'LspDiagnosticsHint' })
hl(0, "LspDiagnosticsSignError", { link = 'LspDiagnosticsError' })
hl(0, "LspDiagnosticsSignWarning", { link = 'LspDiagnosticsWarning' })
hl(0, "LspDiagnosticsSignInformation", { link = 'LspDiagnosticsInfo' })
hl(0, "LspDiagnosticsSignInfo", { link = 'LspDiagnosticsInfo' })
hl(0, "LspDiagnosticsSignHint", { link = 'LspDiagnosticsHint' })
hl(0, "LspDiagnosticsUnderlineError", { link = 'DiagnosticUnderlineError' })
hl(0, "LspDiagnosticsUnderlineWarning", { link = 'DiagnosticUnderlineWarn' })
hl(0, "LspDiagnosticsUnderlineInformation", { link = 'DiagnosticUnderlineInfo' })
hl(0, "LspDiagnosticsUnderlineInfo", { link = 'DiagnosticUnderlineInfo' })
hl(0, "LspDiagnosticsUnderlineHint", { link = 'DiagnosticUnderlineHint' })
hl(0, "LspCodeLens", { fg = c.gray1, bg = 'NONE', italic=true, })
hl(0, "LspCodeLensSeparator", { fg = c.gray1, bg = 'NONE', italic=true, })

-- BlinkCmp
hl(0, "BlinkCmpDoc", { fg = 'NONE', bg = c.bg0, })
hl(0, "BlinkCmpDocBorder", { fg = c.gray2, bg = 'NONE', })
hl(0, "BlinkCmpDocCursorLine", { fg = 'NONE', bg = c.bg3, })
hl(0, "BlinkCmpDocSeparator", { fg = c.gray1, bg = 'NONE', })
hl(0, "BlinkCmpGhostText", { fg = c.gray2, bg = 'NONE', })
hl(0, "BlinkCmpLabel", { fg = c.fg, bg = 'NONE', })
hl(0, "BlinkCmpLabelDeprecated", { fg = c.red, bg = 'NONE', strikethrough=true, })
hl(0, "BlinkCmpLabelDescription", { fg = c.gray4, bg = 'NONE', })
hl(0, "BlinkCmpLabelDetail", { fg = c.gray4, bg = 'NONE', })
hl(0, "BlinkCmpLabelMatch", { fg = c.blue, bg = 'NONE', bold=true, })
hl(0, "BlinkCmpMenu", { fg = 'NONE', bg = c.bg0, })
hl(0, "BlinkCmpMenuBorder", { fg = c.gray2, bg = 'NONE', })
hl(0, "BlinkCmpMenuSelection", { link = 'PmenuSel' })
hl(0, "BlinkCmpScrollBarGutter", { fg = 'NONE', bg = c.bg2, })
hl(0, "BlinkCmpScrollBarThumb", { fg = 'NONE', bg = c.gray1, })
hl(0, "BlinkCmpSignatureHelp", { fg = 'NONE', bg = c.bg0, })
hl(0, "BlinkCmpSignatureHelpActiveParameter", { fg = c.blue, bg = 'NONE', bold=true, })
hl(0, "BlinkCmpSignatureHelpBorder", { fg = c.gray2, bg = 'NONE', })
hl(0, "BlinkCmpSource", { fg = c.gray2, bg = 'NONE', })
hl(0, "BlinkCmpItemKindConstant", { fg = c.base09, bg = 'NONE', })
hl(0, "BlinkCmpItemKindFunction", { fg = c.base0D, bg = 'NONE', })
hl(0, "BlinkCmpItemKindIdentifier", { fg = c.base08, bg = 'NONE', })
hl(0, "BlinkCmpItemKindField", { fg = c.base08, bg = 'NONE', })
hl(0, "BlinkCmpItemKindVariable", { fg = c.base0E, bg = 'NONE', })
hl(0, "BlinkCmpItemKindSnippet", { fg = c.red, bg = 'NONE', })
hl(0, "BlinkCmpItemKindText", { fg = c.base0B, bg = 'NONE', })
hl(0, "BlinkCmpItemKindStructure", { fg = c.base0E, bg = 'NONE', })
hl(0, "BlinkCmpItemKindType", { fg = c.base0A, bg = 'NONE', })
hl(0, "BlinkCmpItemKindKeyword", { fg = c.base07, bg = 'NONE', })
hl(0, "BlinkCmpItemKindMethod", { fg = c.base0D, bg = 'NONE', })
hl(0, "BlinkCmpItemKindConstructor", { fg = c.blue, bg = 'NONE', })
hl(0, "BlinkCmpItemKindFolder", { fg = c.base07, bg = 'NONE', })
hl(0, "BlinkCmpItemKindModule", { fg = c.base0A, bg = 'NONE', })
hl(0, "BlinkCmpItemKindProperty", { fg = c.base08, bg = 'NONE', })
hl(0, "BlinkCmpItemKindEnum", { fg = c.blue, bg = 'NONE', })
hl(0, "BlinkCmpItemKindUnit", { fg = c.base0E, bg = 'NONE', })
hl(0, "BlinkCmpItemKindClass", { fg = c.teal, bg = 'NONE', })
hl(0, "BlinkCmpItemKindFile", { fg = c.base07, bg = 'NONE', })
hl(0, "BlinkCmpItemKindInterface", { fg = c.green, bg = 'NONE', })
hl(0, "BlinkCmpItemKindColor", { fg = c.fg, bg = 'NONE', })
hl(0, "BlinkCmpItemKindReference", { fg = c.base05, bg = 'NONE', })
hl(0, "BlinkCmpItemKindEnumMember", { fg = c.purple, bg = 'NONE', })
hl(0, "BlinkCmpItemKindStruct", { fg = c.base0E, bg = 'NONE', })
hl(0, "BlinkCmpItemKindValue", { fg = c.cyan, bg = 'NONE', })
hl(0, "BlinkCmpItemKindEvent", { fg = c.yellow, bg = 'NONE', })
hl(0, "BlinkCmpItemKindOperator", { fg = c.base05, bg = 'NONE', })
hl(0, "BlinkCmpItemKindTypeParameter", { fg = c.base08, bg = 'NONE', })
hl(0, "BlinkCmpItemKindCopilot", { fg = c.green, bg = 'NONE', })
hl(0, "BlinkCmpItemKindCodeium", { fg = c.green2, bg = 'NONE', })
hl(0, "BlinkCmpItemKindTabNine", { fg = c.pink, bg = 'NONE', })

-- Cmp
hl(0, "CmpItemAbbr", { fg = c.fg, bg = 'NONE', })
hl(0, "CmpItemAbbrMatch", { fg = c.blue, bg = c._, bold=true, })
hl(0, "CmpDoc", { fg = c.bg1, bg = 'NONE', })
hl(0, "CmpDocBorder", { fg = c.bg1, bg = c.bg1, })
hl(0, "CmpPmenu", { fg = c.bg0, bg = 'NONE', })
hl(0, "CmpSel", { fg = 'NONE', bg = c.ui_pmenu_bg, bold=true, })
hl(0, "CmpItemKindConstant", { fg = c.base09, bg = 'NONE', })
hl(0, "CmpItemKindFunction", { fg = c.base0D, bg = 'NONE', })
hl(0, "CmpItemKindIdentifier", { fg = c.base08, bg = 'NONE', })
hl(0, "CmpItemKindField", { fg = c.base08, bg = 'NONE', })
hl(0, "CmpItemKindVariable", { fg = c.base0E, bg = 'NONE', })
hl(0, "CmpItemKindSnippet", { fg = c.red, bg = 'NONE', })
hl(0, "CmpItemKindText", { fg = c.base0B, bg = 'NONE', })
hl(0, "CmpItemKindStructure", { fg = c.base0E, bg = 'NONE', })
hl(0, "CmpItemKindType", { fg = c.base0A, bg = 'NONE', })
hl(0, "CmpItemKindKeyword", { fg = c.base07, bg = 'NONE', })
hl(0, "CmpItemKindMethod", { fg = c.base0D, bg = 'NONE', })
hl(0, "CmpItemKindConstructor", { fg = c.blue, bg = 'NONE', })
hl(0, "CmpItemKindFolder", { fg = c.base07, bg = 'NONE', })
hl(0, "CmpItemKindModule", { fg = c.base0A, bg = 'NONE', })
hl(0, "CmpItemKindProperty", { fg = c.base08, bg = 'NONE', })
hl(0, "CmpItemKindEnum", { fg = c.blue, bg = 'NONE', })
hl(0, "CmpItemKindUnit", { fg = c.base0E, bg = 'NONE', })
hl(0, "CmpItemKindClass", { fg = c.teal, bg = 'NONE', })
hl(0, "CmpItemKindFile", { fg = c.base07, bg = 'NONE', })
hl(0, "CmpItemKindInterface", { fg = c.green, bg = 'NONE', })
hl(0, "CmpItemKindColor", { fg = c.fg, bg = 'NONE', })
hl(0, "CmpItemKindReference", { fg = c.base05, bg = 'NONE', })
hl(0, "CmpItemKindEnumMember", { fg = c.purple, bg = 'NONE', })
hl(0, "CmpItemKindStruct", { fg = c.base0E, bg = 'NONE', })
hl(0, "CmpItemKindValue", { fg = c.cyan, bg = 'NONE', })
hl(0, "CmpItemKindEvent", { fg = c.yellow, bg = 'NONE', })
hl(0, "CmpItemKindOperator", { fg = c.base05, bg = 'NONE', })
hl(0, "CmpItemKindTypeParameter", { fg = c.base08, bg = 'NONE', })
hl(0, "CmpItemKindCopilot", { fg = c.green, bg = 'NONE', })
hl(0, "CmpItemKindCodeium", { fg = c.green2, bg = 'NONE', })
hl(0, "CmpItemKindTabNine", { fg = c.pink, bg = 'NONE', })

-- Markdown
hl(0, "markdownBlockquote", { fg = c.orange, bg = 'NONE', })
hl(0, "markdownCode", { fg = c.teal, bg = 'NONE', })
hl(0, "markdownCodeBlock", { fg = c.teal, bg = 'NONE', })
hl(0, "markdownCodeDelimiter", { fg = c.teal, bg = 'NONE', })
hl(0, "markdownH1", { link = 'Title' })
hl(0, "markdownH2", { link = 'Title' })
hl(0, "markdownH3", { link = 'Title' })
hl(0, "markdownH4", { link = 'Title' })
hl(0, "markdownH5", { link = 'Title' })
hl(0, "markdownH6", { link = 'Title' })
hl(0, "markdownHeadingDelimiter", { fg = c.orange, bg = 'NONE', bold=true, })
hl(0, "markdownHeadingRule", { link = 'PreProc' })
hl(0, "markdownId", { link = 'Type' })
hl(0, "markdownIdDeclaration", { link = 'Typedef' })
hl(0, "markdownIdDelimiter", { link = 'Delimiter' })
hl(0, "markdownLinkDelimiter", { link = 'Delimiter' })
hl(0, "markdownBold", { link = 'Bold' })
hl(0, "markdownItalic", { link = 'Italic' })
hl(0, "markdownBoldItalic", { fg = c.yellow, bg = 'NONE', italic=true, bold=true, })
hl(0, "markdownListMarker", { fg = c.orange, bg = 'NONE', bold=true, })
hl(0, "markdownOrderedListMarker", { fg = c.orange, bg = 'NONE', bold=true, })
hl(0, "markdownRule", { link = 'PreProc' })
hl(0, "markdownUrl", { fg = c.cyan, bg = 'NONE', underline=true, })
hl(0, "markdownLinkText", { fg = c.cyan, bg = 'NONE', underline=true, })
hl(0, "markdownFootnote", { link = 'Typedef' })
hl(0, "markdownFootnoteDefinition", { link = 'Typedef' })
hl(0, "markdownEscape", { link = 'Special' })

-- WhichKey
hl(0, "WhichKey", { fg = c.cyan, bg = 'NONE', })
hl(0, "WhichKeySeperator", { link = 'Comment' })
hl(0, "WhichKeyGroup", { fg = c.blue, bg = 'NONE', })
hl(0, "WhichKeyDesc", { fg = c.base0E, bg = 'NONE', })
hl(0, "WhichKeyFloat", { fg = 'NONE', bg = c.bg1, })
hl(0, "WhichKeyValue", { fg = c.base04, bg = 'NONE', })
hl(0, "WhichKeyBorder", { link = 'FloatBorder' })

-- Git
hl(0, "GitSignsAdd", { fg = c.green, bg = 'NONE', })
hl(0, "GitSignsChange", { fg = c.blue, bg = 'NONE', })
hl(0, "GitSignsDelete", { fg = c.red, bg = 'NONE', })

-- Telescope
hl(0, "TelescopeBorder", { fg = c.ui_visual_line, bg = c.bg1, })
hl(0, "TelescopeNormal", { fg = c.fg, bg = c.bg1, })
hl(0, "TelescopeMatching", { fg = c.base0D, bg = 'NONE', })
hl(0, "TelescopePreviewTitle", { fg = c.bg0, bg = c.cyan, })
hl(0, "TelescopePromptBorder", { link = 'TelescopeBorder' })
hl(0, "TelescopePromptNormal", { link = 'TelescopeNormal' })
hl(0, "TelescopePromptPrefix", { fg = c.red, bg = 'NONE', })
hl(0, "TelescopePromptTitle", { fg = c.bg0, bg = c.red, bold=true, })
hl(0, "TelescopeResultsDiffAdd", { fg = c.green, bg = 'NONE', })
hl(0, "TelescopeResultsDiffChange", { fg = c.yellow, bg = 'NONE', })
hl(0, "TelescopeResultsDiffDelete", { fg = c.red, bg = 'NONE', })
hl(0, "TelescopeResultsTitle", { fg = c.bg0, bg = c.cyan, })
hl(0, "TelescopeSelection", { fg = c.fg, bg = c.base02, })

-- Fzf-Lua
hl(0, "FzfLuaBorder", { fg = c.ui_visual_line, bg = c.bg1, })
hl(0, "FzfLuaNormal", { fg = c.fg, bg = c.bg1, })
hl(0, "FzfLuaFzfMatch", { fg = c.base0D, bg = 'NONE', })
hl(0, "FzfLuaTitle", { fg = c.bg0, bg = c.cyan, })
hl(0, "FzfLuaFzfBorder", { link = 'FzfLuaBorder' })
hl(0, "FzfLuaFzfPrompt", { link = 'FzfLuaFzfPrompt' })
hl(0, "FzfLuaDirIcon", { fg = c.gray1, bg = 'NONE', })
hl(0, "FzfLuaDirPart", { fg = c.gray1, bg = 'NONE', })

-- Lir
hl(0, "LirFloatNormal", { fg = c.base05, bg = c.bg1, })
hl(0, "LirDir", { fg = c.blue, bg = 'NONE', })
hl(0, "LirSymLink", { fg = c.cyan, bg = 'NONE', })
hl(0, "LirEmptyDirText", { link = 'Comment' })

-- Buffer
hl(0, "BufferCurrent", { fg = c.base05, bg = c.base00, })
hl(0, "BufferCurrentIndex", { fg = c.base05, bg = c.base00, })
hl(0, "BufferCurrentMod", { fg = c.yellow2, bg = c.base00, })
hl(0, "BufferCurrentSign", { fg = c.purple, bg = c.base00, })
hl(0, "BufferCurrentTarget", { fg = c.red, bg = c.base00, bold=true, })
hl(0, "BufferVisible", { fg = c.base05, bg = c.base00, })
hl(0, "BufferVisibleIndex", { fg = c.base05, bg = c.base00, })
hl(0, "BufferVisibleMod", { fg = c.yellow2, bg = c.base00, })
hl(0, "BufferVisibleSign", { fg = c.gray1, bg = c.base00, })
hl(0, "BufferVisibleTarget", { fg = c.red, bg = c.base00, bold=true, })
hl(0, "BufferInactive", { fg = c.gray1, bg = c.bg1, })
hl(0, "BufferInactiveIndex", { fg = c.gray1, bg = c.bg1, })
hl(0, "BufferInactiveMod", { fg = c.yellow2, bg = c.bg1, })
hl(0, "BufferInactiveSign", { fg = c.gray1, bg = c.bg1, })
hl(0, "BufferInactiveTarget", { fg = c.red, bg = c.bg1, bold=true, })

-- Codeaction
hl(0, "CodeActionMenuWarningMessageText", { fg = c.fg, bg = 'NONE', })
hl(0, "CodeActionMenuWarningMessageBorder", { fg = c.red, bg = 'NONE', })
hl(0, "CodeActionMenuMenuIndex", { fg = c.blue, bg = 'NONE', })
hl(0, "CodeActionMenuMenuKind", { fg = c.green, bg = 'NONE', })
hl(0, "CodeActionMenuMenuTitle", { fg = c.fg, bg = 'NONE', })
hl(0, "CodeActionMenuMenuDisabled", { link = 'Comment' })
hl(0, "CodeActionMenuMenuSelection", { fg = c.blue, bg = 'NONE', })
hl(0, "CodeActionMenuDetailsTitle", { fg = c.fg, bg = 'NONE', })
hl(0, "CodeActionMenuDetailsLabel", { fg = c.yellow, bg = 'NONE', })
hl(0, "CodeActionMenuDetailsPreferred", { fg = c.green, bg = 'NONE', })
hl(0, "CodeActionMenuDetailsDisabled", { link = 'Comment' })
hl(0, "CodeActionMenuDetailsUndefined", { link = 'Comment' })

-- StatusLine
hl(0, "StatusLine", { fg = c.ui_visual_line, bg = c.ui_statusline_bg, })
hl(0, "StatusLineNC", { fg = 'NONE', bg = c.ui_statusline_bg, })
hl(0, "StatusLineSeparator", { fg = c.ui_visual_line, bg = 'NONE', })
hl(0, "StatusLineTerm", { fg = c.ui_visual_line, bg = 'NONE', })
hl(0, "StatusLineTermNC", { fg = c.ui_visual_line, bg = 'NONE', })

-- Bookmarks
hl(0, "BookmarkSign", { fg = c.gitsigns_change, bg = 'NONE', })
hl(0, "BookmarkAnnotationSign", { fg = c.yellow, bg = 'NONE', })
hl(0, "BookmarkLine", { link = 'Visual' })
hl(0, "BookmarkAnnotationLine", { link = 'Visual' })

-- Bqf
hl(0, "BqfPreviewBorder", { link = 'FloatBorder' })
hl(0, "BqfPreviewRange", { link = 'Visual' })

-- SymbolOutline
hl(0, "SymbolsOutlineConnector", { fg = c.base04, bg = 'NONE', })

-- Notify
hl(0, "NotifyERRORBorder", { fg = c.red, bg = 'NONE', })
hl(0, "NotifyWARNBorder", { fg = c.yellow, bg = 'NONE', })
hl(0, "NotifyINFOBorder", { fg = c.base0D, bg = 'NONE', })
hl(0, "NotifyDEBUGBorder", { fg = c.gray1, bg = 'NONE', })
hl(0, "NotifyTRACEBorder", { fg = c.purple, bg = 'NONE', })
hl(0, "NotifyERRORIcon", { fg = c.red, bg = 'NONE', })
hl(0, "NotifyWARNIcon", { fg = c.yellow, bg = 'NONE', })
hl(0, "NotifyINFOIcon", { fg = c.base0D, bg = 'NONE', })
hl(0, "NotifyDEBUGIcon", { fg = c.gray1, bg = 'NONE', })
hl(0, "NotifyTRACEIcon", { fg = c.purple, bg = 'NONE', })
hl(0, "NotifyERRORTitle", { fg = c.red, bg = 'NONE', })
hl(0, "NotifyWARNTitle", { fg = c.yellow, bg = 'NONE', })
hl(0, "NotifyINFOTitle", { fg = c.base0D, bg = 'NONE', })
hl(0, "NotifyDEBUGTitle", { fg = c.gray1, bg = 'NONE', })
hl(0, "NotifyTRACETitle", { fg = c.purple, bg = 'NONE', })
hl(0, "NotifyERRORBody", { fg = c.base05, bg = c.base00, })
hl(0, "NotifyWARNBody", { fg = c.base05, bg = c.base00, })
hl(0, "NotifyINFOBody", { fg = c.base05, bg = c.base00, })
hl(0, "NotifyDEBUGBody", { fg = c.base05, bg = c.base00, })
hl(0, "NotifyTRACEBody", { fg = c.base05, bg = c.base00, })

-- TreesitterContext
hl(0, "TreesitterContext", { fg = 'NONE', bg = c.bg1, })

-- Crates
hl(0, "CratesNvimLoading", { fg = c.base0D, bg = 'NONE', })
hl(0, "CratesNvimVersion", { fg = c.base0D, bg = 'NONE', })

-- Headlines
hl(0, "CodeBlock", { fg = 'NONE', bg = c.bg3, })
hl(0, "Headline", { fg = 'NONE', bg = c.bg3, })

-- Mini
hl(0, "MiniJump", { fg = c.fg, bg = c.base07, })
hl(0, "MiniHipatternsFixme", { fg = c.green, bg = 'NONE', })
hl(0, "MiniHipatternsHack", { fg = c.blue, bg = 'NONE', })
hl(0, "MiniHipatternsTodo", { fg = c.cyan, bg = 'NONE', })
hl(0, "MiniHipatternsNote", { fg = c.yellow2, bg = 'NONE', })
hl(0, "MiniHipatternsFFS", { fg = c.red, bg = 'NONE', })
hl(0, "MiniIndentscopeSymbol", { link = 'Comment' })

-- Alpha
hl(0, "AlphaHeader", { fg = c.gray1, bg = 'NONE', })
hl(0, "AlphaButtons", { fg = c.gray1, bg = 'NONE', })

-- Dap
hl(0, "DapBreakpoint", { fg = c.red, bg = 'NONE', })
hl(0, "DapBreakpointCondition", { fg = c.yellow, bg = 'NONE', })
hl(0, "DapLogPoint", { fg = c.cyan, bg = 'NONE', })
hl(0, "DapStopped", { fg = c.pink, bg = 'NONE', })

-- DapUI
hl(0, "DAPUIScope", { fg = c.cyan, bg = 'NONE', })
hl(0, "DAPUIType", { fg = c.purple2, bg = 'NONE', })
hl(0, "DAPUIValue", { fg = c.cyan, bg = 'NONE', })
hl(0, "DAPUIVariable", { fg = c.fg, bg = 'NONE', })
hl(0, "DapUIModifiedValue", { fg = c.orange, bg = 'NONE', })
hl(0, "DapUIDecoration", { fg = c.cyan, bg = 'NONE', })
hl(0, "DapUIThread", { fg = c.green, bg = 'NONE', })
hl(0, "DapUIStoppedThread", { fg = c.cyan, bg = 'NONE', })
hl(0, "DapUISource", { fg = c.lavender, bg = 'NONE', })
hl(0, "DapUILineNumber", { fg = c.cyan, bg = 'NONE', })
hl(0, "DapUIFloatBorder", { fg = c.cyan, bg = 'NONE', })
hl(0, "DapUIWatchesEmpty", { fg = c.pink, bg = 'NONE', })
hl(0, "DapUIWatchesValue", { fg = c.green, bg = 'NONE', })
hl(0, "DapUIWatchesError", { fg = c.pink, bg = 'NONE', })
hl(0, "DapUIBreakpointsPath", { fg = c.cyan, bg = 'NONE', })
hl(0, "DapUIBreakpointsInfo", { fg = c.green, bg = 'NONE', })
hl(0, "DapUIBreakPointsCurrentLine", { fg = c.green, bg = c._, bold=true, })
hl(0, "DapUIBreakpointsDisabledLine", { fg = c.base0F, bg = 'NONE', })
hl(0, "DapUIStepOver", { fg = c.blue, bg = 'NONE', })
hl(0, "DapUIStepOverNC", { fg = c.blue, bg = 'NONE', })
hl(0, "DapUIStepInto", { fg = c.blue, bg = 'NONE', })
hl(0, "DapUIStepIntoNC", { fg = c.blue, bg = 'NONE', })
hl(0, "DapUIStepBack", { fg = c.blue, bg = 'NONE', })
hl(0, "DapUIStepBackNC", { fg = c.blue, bg = 'NONE', })
hl(0, "DapUIStepOut", { fg = c.blue, bg = 'NONE', })
hl(0, "DapUIStepOutNC", { fg = c.blue, bg = 'NONE', })
hl(0, "DapUIStop", { fg = c.red, bg = 'NONE', })
hl(0, "DapUIStopNC", { fg = c.red, bg = 'NONE', })
hl(0, "DapUIPlayPause", { fg = c.green, bg = 'NONE', })
hl(0, "DapUIPlayPauseNC", { fg = c.green, bg = 'NONE', })
hl(0, "DapUIRestart", { fg = c.green, bg = 'NONE', })
hl(0, "DapUIRestartNC", { fg = c.green, bg = 'NONE', })
hl(0, "DapUIUnavailable", { fg = c.gray1, bg = 'NONE', })
hl(0, "DapUIUnavailableNC", { fg = c.gray1, bg = 'NONE', })

-- RainbowDelimiters
hl(0, "RainbowDelimiterRed", { fg = c.red, bg = 'NONE', })
hl(0, "RainbowDelimiterOrange", { fg = c.orange, bg = 'NONE', })
hl(0, "RainbowDelimiterYellow", { fg = c.yellow, bg = 'NONE', })
hl(0, "RainbowDelimiterGreen", { fg = c.green, bg = 'NONE', })
hl(0, "RainbowDelimiterCyan", { fg = c.cyan, bg = 'NONE', })
hl(0, "RainbowDelimiterBlue", { fg = c.blue, bg = 'NONE', })
hl(0, "RainbowDelimiterViolet", { fg = c.purple, bg = 'NONE', })

-- Rainbow
hl(0, "Rainbow1", { fg = c.red, bg = 'NONE', })
hl(0, "Rainbow2", { fg = c.orange, bg = 'NONE', })
hl(0, "Rainbow3", { fg = c.yellow, bg = 'NONE', })
hl(0, "Rainbow4", { fg = c.green, bg = 'NONE', })
hl(0, "Rainbow5", { fg = c.cyan, bg = 'NONE', })
hl(0, "Rainbow6", { fg = c.blue, bg = 'NONE', })
hl(0, "Rainbow7", { fg = c.purple, bg = 'NONE', })

-- Trouble
hl(0, "TroubleCount", { fg = c.pink, bg = 'NONE', })
hl(0, "TroubleCode", { fg = c.fg, bg = 'NONE', })
hl(0, "TroubleWarning", { fg = c.orange, bg = 'NONE', })
hl(0, "TroubleSignWarning", { link = 'DiagnosticWarn' })
hl(0, "TroubleTextWarning", { fg = c.fg, bg = 'NONE', })
hl(0, "TroublePreview", { fg = c.red, bg = 'NONE', })
hl(0, "TroubleSource", { fg = c.cyan, bg = 'NONE', })
hl(0, "TroubleSignHint", { link = 'DiagnosticHint' })
hl(0, "TroubleTextHint", { fg = c.fg, bg = 'NONE', })
hl(0, "TroubleHint", { fg = c.orange, bg = 'NONE', })
hl(0, "TroubleSignOther", { link = 'DiagnosticNormal' })
hl(0, "TroubleSignInformation", { fg = c.fg, bg = 'NONE', })
hl(0, "TroubleTextInformation", { fg = c.fg, bg = 'NONE', })
hl(0, "TroubleInformation", { fg = c.fg, bg = 'NONE', })
hl(0, "TroubleError", { fg = c.red, bg = 'NONE', })
hl(0, "TroubleTextError", { fg = c.fg, bg = 'NONE', })
hl(0, "TroubleSignError", { link = 'DiagnosticError' })
hl(0, "TroubleText", { fg = c.fg, bg = 'NONE', })
hl(0, "TroubleFile", { fg = c.yellow, bg = 'NONE', })
hl(0, "TroubleFoldIcon", { link = 'Folded' })
hl(0, "TroubleNormal", { fg = c.fg, bg = 'NONE', })
hl(0, "TroubleLocation", { fg = c.red, bg = 'NONE', })
hl(0, "TroubleIndent", { link = 'Comment' })

-- DevIcons
hl(0, "DevIconDefault", { fg = c.red, bg = 'NONE', })
hl(0, "DevIconc", { fg = c.blue, bg = 'NONE', })
hl(0, "DevIconcss", { fg = c.blue, bg = 'NONE', })
hl(0, "DevIcondeb", { fg = c.cyan, bg = 'NONE', })
hl(0, "DevIconDockerfile", { fg = c.cyan, bg = 'NONE', })
hl(0, "DevIconhtml", { fg = c.pink, bg = 'NONE', })
hl(0, "DevIconjpeg", { fg = c.purple2, bg = 'NONE', })
hl(0, "DevIconjpg", { fg = c.purple2, bg = 'NONE', })
hl(0, "DevIconjs", { fg = c.yellow2, bg = 'NONE', })
hl(0, "DevIconkt", { fg = c.orange, bg = 'NONE', })
hl(0, "DevIconlock", { fg = c.red, bg = 'NONE', })
hl(0, "DevIconlua", { fg = c.blue, bg = 'NONE', })
hl(0, "DevIconmp3", { fg = c.fg, bg = 'NONE', })
hl(0, "DevIconmp4", { fg = c.fg, bg = 'NONE', })
hl(0, "DevIconout", { fg = c.fg, bg = 'NONE', })
hl(0, "DevIconpng", { fg = c.purple2, bg = 'NONE', })
hl(0, "DevIconpy", { fg = c.cyan, bg = 'NONE', })
hl(0, "DevIcontoml", { fg = c.blue, bg = 'NONE', })
hl(0, "DevIconts", { fg = c.teal, bg = 'NONE', })
hl(0, "DevIconttf", { fg = c.fg, bg = 'NONE', })
hl(0, "DevIconrb", { fg = c.pink, bg = 'NONE', })
hl(0, "DevIconrpm", { fg = c.orange, bg = 'NONE', })
hl(0, "DevIconvue", { fg = c.green2, bg = 'NONE', })
hl(0, "DevIconwoff", { fg = c.fg, bg = 'NONE', })
hl(0, "DevIconwoff2", { fg = c.fg, bg = 'NONE', })
hl(0, "DevIconxz", { fg = c.yellow2, bg = 'NONE', })
hl(0, "DevIconzip", { fg = c.yellow2, bg = 'NONE', })
hl(0, "DevIconZig", { fg = c.orange, bg = 'NONE', })
hl(0, "DevIconMd", { fg = c.blue, bg = 'NONE', })
hl(0, "DevIconTSX", { fg = c.blue, bg = 'NONE', })
hl(0, "DevIconJSX", { fg = c.blue, bg = 'NONE', })
hl(0, "DevIconSvelte", { fg = c.red, bg = 'NONE', })
hl(0, "DevIconJava", { fg = c.orange, bg = 'NONE', })
hl(0, "DevIconDart", { fg = c.cyan, bg = 'NONE', })

-- Mason
hl(0, "MasonHeader", { fg = c.bg0, bg = c.red, })
hl(0, "MasonHighlight", { fg = c.blue, bg = 'NONE', })
hl(0, "MasonHighlightBlock", { fg = c.green, bg = c.bg0, })
hl(0, "MasonHighlightBlockBold", { link = 'MasonHighlightBlock' })
hl(0, "MasonHeaderSecondary", { link = 'MasonHighlightBlock' })
hl(0, "MasonMuted", { fg = c.base0F, bg = 'NONE', })
hl(0, "MasonMutedBlock", { fg = c.bg3, bg = c.base0F, })

-- Language
hl(0, "xmlTag", { fg = c.cyan, bg = 'NONE', })
hl(0, "xmlTagName", { fg = c.cyan, bg = 'NONE', })
hl(0, "xmlEndTag", { fg = c.cyan, bg = 'NONE', })
hl(0, "yamlPlainScalar", { fg = c.orange, bg = 'NONE', })
hl(0, "yamlTSField", { fg = c.blue, bg = 'NONE', })
hl(0, "luaFunc", { fg = c.yellow, bg = 'NONE', })
hl(0, "luaFunction", { fg = c.blue, bg = 'NONE', })
hl(0, "hclTSPunctSpecial", { fg = c.gray1, bg = 'NONE', })
hl(0, "htmlH1", { fg = c.fg, bg = 'NONE', })
hl(0, "htmlH2", { fg = c.fg, bg = 'NONE', })
hl(0, "htmlH3", { fg = c.fg, bg = 'NONE', })
hl(0, "htmlH4", { fg = c.fg, bg = 'NONE', })
hl(0, "htmlH5", { fg = c.fg, bg = 'NONE', })
hl(0, "htmlH6", { fg = c.fg, bg = 'NONE', })
hl(0, "htmlHead", { fg = c.fg, bg = 'NONE', })
hl(0, "htmlTitle", { fg = c.fg, bg = 'NONE', })
hl(0, "htmlArg", { fg = c.fg, bg = 'NONE', })
hl(0, "htmlTag", { fg = c.blue, bg = 'NONE', })
hl(0, "htmlTagN", { fg = c.blue, bg = 'NONE', })
hl(0, "htmlTagName", { fg = c.blue, bg = 'NONE', })
hl(0, "htmlComment", { fg = c.green, bg = 'NONE', })
hl(0, "htmlLink", { fg = c.orange, bg = 'NONE', underline=true, })
hl(0, "cssBraces", { fg = c.fg, bg = 'NONE', })
hl(0, "cssInclude", { fg = c.purple, bg = 'NONE', })
hl(0, "cssTagName", { fg = c.yellow, bg = 'NONE', })
hl(0, "cssClassName", { fg = c.yellow, bg = 'NONE', })
hl(0, "cssPseudoClass", { fg = c.yellow, bg = 'NONE', })
hl(0, "cssPseudoClassId", { fg = c.yellow, bg = 'NONE', })
hl(0, "cssPseudoClassLang", { fg = c.yellow, bg = 'NONE', })
hl(0, "cssIdentifier", { fg = c.yellow, bg = 'NONE', })
hl(0, "cssProp", { fg = c.fg, bg = 'NONE', })
hl(0, "cssDefinition", { fg = c.fg, bg = 'NONE', })
hl(0, "cssAttr", { fg = c.orange, bg = 'NONE', })
hl(0, "cssAttrRegion", { fg = c.orange, bg = 'NONE', })
hl(0, "cssColor", { fg = c.orange, bg = 'NONE', })
hl(0, "cssFunction", { fg = c.purple, bg = 'NONE', })
hl(0, "cssFunctionName", { fg = c.yellow, bg = 'NONE', })
hl(0, "cssVendor", { fg = c.orange, bg = 'NONE', })
hl(0, "cssValueNumber", { fg = c.orange, bg = 'NONE', })
hl(0, "cssValueLength", { fg = c.orange, bg = 'NONE', })
hl(0, "cssUnitDecorators", { fg = c.orange, bg = 'NONE', })
hl(0, "cssStyle", { fg = c.fg, bg = 'NONE', })
hl(0, "cssImportant", { fg = c.blue, bg = 'NONE', })
hl(0, "jsonKeyword", { fg = c.blue, bg = 'NONE', })
hl(0, "yamlBlockMappingKey", { fg = c.blue, bg = 'NONE', })
hl(0, "tomlTSProperty", { fg = c.blue, bg = 'NONE', })